plugins {
  id "com.github.maiflai.scalatest" version "0.22"
  id 'nebula.provided-base' version '3.0.3'
  id "com.github.alisiikh.scalastyle_2.11" version "2.0.2"
  id "scala"
}

repositories {
    jcenter()
}

ext {
    delimBuildNumber = System.env.BUILD_NUMBER ? ".${System.env.BUILD_NUMBER}" : ""
    scalaVersion = '2.11'
}

group 'uk.gov.ons'
version = rootProject.file('project.version').text.trim() + delimBuildNumber

dependencies {
    provided "org.apache.spark:spark-core_${scalaVersion}:2.1.0"
    provided "org.apache.spark:spark-sql_${scalaVersion}:2.1.1"

    compile "joda-time:joda-time:2.9.4"
    compile "org.joda:joda-convert:1.8.1"
    compile "com.typesafe:config:1.3.2"
    compile("org.elasticsearch:elasticsearch-spark-20_${scalaVersion}:6.0.0") {
        exclude group: "javax.servlet"
    }

    testCompile "org.scalatest:scalatest_${scalaVersion}:3.0.5"
    testRuntime 'org.pegdown:pegdown:1.4.2'
}

apply from: "$rootDir/gradle/scalastyle.gradle"
apply from: "$rootDir/gradle/oozie.gradle"

task sourcesJar(type: Jar) {
   baseName rootProject.name
   classifier 'sources'
   from sourceSets.main.allSource
}

artifacts {
   archives sourcesJar
   archives oozieZip
}